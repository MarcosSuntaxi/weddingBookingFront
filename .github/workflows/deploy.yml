name: Deploy Frontend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build and push Docker image
        run: |
          docker build -t marcossuntaxi/frontend:latest .
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push marcossuntaxi/frontend:latest

      - name: Deploy to EC2
        run: |
          echo "${{ secrets.AWS_SSH_KEY }}" > /tmp/key.pem
          chmod 400 /tmp/key.pem

          ssh -o StrictHostKeyChecking=no -i /tmp/key.pem ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} << 'EOF'
            set -e
            
            # Install Docker if not installed
            if ! command -v docker &> /dev/null; then
              echo "ðŸš€ Installing Docker..."
              sudo yum update -y
              sudo yum install -y docker
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker ec2-user
            else
              echo "âœ… Docker is already installed."
            fi

            # Install Docker Compose if not installed
            if ! command -v docker-compose &> /dev/null; then
              echo "ðŸš€ Installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            else
              echo "âœ… Docker Compose is already installed."
            fi

            # Ensure user permissions are updated
            sudo chmod 666 /var/run/docker.sock

            # Pull the latest frontend image
            docker pull marcossuntaxi/frontend:latest

            # Navigate to project directory (change if needed)
            cd /home/${{ secrets.AWS_USER }}/app

            # Restart services with the latest image
            docker-compose down
            docker-compose up -d --remove-orphans

            exit
          EOF

      - name: Clean up
        run: rm -f /tmp/key.pem
